<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <title>図鑑コレクションアプリ</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        /* ギャラリーのスタイル */
        #gallery {
            display: flex;
            flex-wrap: wrap;
            margin-top: 20px;
        }
        .gallery-item {
            text-align: center;
            margin: 10px;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 10px;
            width: 150px;
            cursor: pointer;
            position: relative;
            transition: box-shadow 0.3s;
        }
        .gallery-item:hover {
            box-shadow: 0 0 10px rgba(0,0,0,0.2);
        }
        .gallery-item img {
            width: 100px;
            height: 100px;
            border-radius: 8px;
            object-fit: cover;
        }

        /* カメラと説明文のレイアウト */
        #camera-container {
            display: flex;
            align-items: center;
            margin-top: 20px;
        }

        #camera {
            margin-right: 20px;
            border: 2px solid #ddd;
            display: none; /* 初期状態では非表示 */
        }

        /* 説明文表示エリア */
        #description-area {
            display: none;
            padding: 20px;
            border: 2px solid #ddd;
            width: 300px;
            height: 150px;
            text-align: left;
            object-fit: contain;
            font-size: 14px;
            color: #333;
            word-wrap: break-word;
            white-space: pre-wrap; /* 改行を反映 */
        }

        /* 削除ボタン（×アイコン）のスタイル */
        .delete-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            background: none;
            border: none;
            font-size: 18px;
            color: red;
            cursor: pointer;
        }

        .delete-btn:hover {
            color: darkred;
        }
    </style>
</head>
<body>
    <h1>図鑑コレクションアプリ</h1>
    
    <!-- カメラ起動と閉じるボタン -->
    <button id="open-camera">カメラを開く</button>
    <button id="close-camera" style="display:none;">カメラを閉じる</button>

    <!-- カメラと説明文表示エリア -->
    <div id="camera-container">
        <video id="camera" autoplay></video><br>
        <div id="description-area"></div> <!-- 説明文エリア -->
    </div>
    
    <!-- キャプチャした画像 -->
    <canvas id="myCanvas" style="display:none"></canvas><br>
    
    <!-- 送信ボタン -->
    <button id="start">Send</button>
    <button id="save">Save Image</button>
    
    <!-- ギャラリー表示用のセクション -->
    <div id="gallery"></div>
    
    <script>
        // 初期設定
        const canvas = document.getElementById('myCanvas');
        const ctx = canvas.getContext('2d');
        const video = document.getElementById('camera');
        let imageData = '';

        $(document).ready(function() {
            /////// Webカメラの設定
            video.setAttribute("width", 320);
            video.setAttribute("height", 240);

            // カメラが利用可能かチェック
            const hasGetUserMedia = () => {
                return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);
            };

            if (!hasGetUserMedia()) {
                alert("このブラウザではカメラが利用できません。");
                return;
            }

            // 「カメラを開く」ボタンがクリックされた時の処理
            $('#open-camera').on('click', function() {
                navigator.mediaDevices.getUserMedia({ video: true })
                    .then(function(stream) {
                        video.srcObject = stream;
                        video.style.display = 'block'; // カメラを表示
                        $('#open-camera').hide(); // 「カメラを開く」ボタンを非表示
                        $('#close-camera').show(); // 「カメラを閉じる」ボタンを表示
                    })
                    .catch(function(err) {
                        console.error('カメラを利用できません!', err);
                        alert("カメラを利用できません! " + err.message);
                    });
            });

            // 「カメラを閉じる」ボタンがクリックされた時の処理
            $('#close-camera').on('click', function() {
                const stream = video.srcObject;
                const tracks = stream.getTracks();
                tracks.forEach(track => track.stop()); // ストリームを停止
                video.srcObject = null;
                video.style.display = 'none'; // カメラを非表示
                $('#open-camera').show(); // 「カメラを開く」ボタンを表示
                $('#close-camera').hide(); // 「カメラを閉じる」ボタンを非表示
            });
        });

        // 「send」ボタンがクリックされた時の処理
        $('#start').on('click', function() {
            // Videoの幅と高さを取得
            const w = video.videoWidth;
            const h = video.videoHeight;

            // Canvasのサイズを設定
            canvas.setAttribute("width", w);
            canvas.setAttribute("height", h);

            // CanvasにVideoの画像を描画
            ctx.drawImage(video, 0, 0, w, h);

            // 画像データを取得
            imageData = canvas.toDataURL('image/png');
            const base64Data = imageData.replace(/^data:image\/png;base64,/, "");

            // サーバーに画像とテキストを送信
            $.ajax({
                type: 'POST',
                url: 'upload',  // サーバー側のURLに変更してください
                data: {
                    "imgurl": base64Data,
                    "prompt": encodeURIComponent("植物の名前と季節、地域、豆知識を一文ずつ改行して教えて")
                },
                success: function(response) {
                    // サーバーからのレスポンスを加工して統一された形式に整える
                    const formattedResponse = formatResponse(response);

                    // ギャラリーアイテムを作成
                    const galleryItem = $('<div>').addClass('gallery-item');
                    const newImage = $('<img>').attr('src', imageData);
                    galleryItem.append(newImage);

                    // 削除ボタン（×）を追加
                    const deleteBtn = $('<button>').text('×').addClass('delete-btn').hide();
                    galleryItem.append(deleteBtn);

                    // ギャラリーアイテムがクリックされた時に説明文を表示
                    galleryItem.on('click', function() {
                        $('#description-area').html(formattedResponse).show();
                        deleteBtn.toggle();
                    });

                    // 「×」アイコンがクリックされたときの処理
                    deleteBtn.on('click', function(event) {
                        event.stopPropagation(); // クリックイベントの伝播を止める
                        galleryItem.remove(); // ギャラリーアイテムを削除
                    });

                    // ギャラリーにアイテムを追加
                    $('#gallery').append(galleryItem);
                },
                error: function() {
                    alert('送信に失敗しました。');
                }
            });
        });

        // 「Save Image」ボタンがクリックされた時の処理
        $('#save').on('click', function() {
            if (imageData) {
                const link = document.createElement('a');
                link.href = imageData;
                link.download = 'captured_image.png';  // 保存するファイル名
                link.click();  // リンクをクリックしてダウンロード
            } else {
                alert('まず画像を撮影してください。');
            }
        });

        // サーバーからのレスポンスを一定のフォーマットに整形
        function formatResponse(response) {
            // レスポンスを改行で分割
            const lines = response.split('\n');

            // 各行の内容を統一された形式で整える
            let formattedText = '';
            const labels = ['植物の名前', '季節', '地域', '豆知識'];

            // 最大4つの項目を処理
            for (let i = 0; i < labels.length; i++) {
                const label = labels[i];
                const value = lines[i] ? lines[i].trim() : ''; // 各項目の値
                if (value) {
                    formattedText += `<strong>${label}:</strong> ${value}<br>`;
                }
            }

            return formattedText;
        }
    </script>
</body>
</html>
